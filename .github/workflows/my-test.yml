name: My Test Build

on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '!**/assets/**'
      - '!**.md'
      - '!**/ISSUE_TEMPLATE/**'
      - '!**/modules/web/**'
      - '!.github/workflows/**'
      - '.github/workflows/my_test.yml'
  pull_request:
    paths-ignore:
      - '**/modules/web/**'
  workflow_dispatch:
  watch:
    types: [ started ]


# run one workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true  # true false


jobs:

  prepare:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'Merge pull request') }}
    outputs:
      version: ${{ steps.set-ver.outputs.version }}
      versionL: ${{ steps.set-ver.outputs.versionL }}
      lanzou: ${{ steps.check.outputs.lanzou }}
      telegram: ${{ steps.check.outputs.telegram }}
    steps:
      - id: set-ver
        run: |
          echo "version=$(date -d "8 hour" -u +3.%y.%m%d%H)" >> $GITHUB_OUTPUT
          echo "versionL=$(date -d "8 hour" -u +3.%y.%m%d%H%M)" >> $GITHUB_OUTPUT
      - id: check
        run: |
          if [ ${{ secrets.LANZOU_ID }} ]; then
            echo "lanzou=yes" >> $GITHUB_OUTPUT
          fi
          if [ ${{ secrets.BOT_TOKEN }} ]; then
            echo "telegram=yes" >> $GITHUB_OUTPUT
          fi

  build:
    needs: prepare
    strategy:
      matrix:
        product: [ app ]
        type: [ release, releaseA, releaseACommon, releaseAManaga, releaseAVideo ]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      product: ${{ matrix.product }}
      type: ${{ matrix.type }}
      VERSION: ${{ needs.prepare.outputs.version }}
      VERSIONL: ${{ needs.prepare.outputs.versionL }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Clear 18PlusList.txt
        run: |
          echo "清空18PlusList.txt"
          echo "">$GITHUB_WORKSPACE/app/src/main/assets/18PlusList.txt
      - name: Release Apk Sign
        run: |
          echo "给apk增加签名"
          cp $GITHUB_WORKSPACE/.github/workflows/legado.jks $GITHUB_WORKSPACE/app/legado.jks
          sed '$a\RELEASE_STORE_FILE=./legado.jks'          $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_ALIAS=legado'                 $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_STORE_PASSWORD=gedoor_legado'     $GITHUB_WORKSPACE/gradle.properties -i
          sed '$a\RELEASE_KEY_PASSWORD=gedoor_legado'       $GITHUB_WORKSPACE/gradle.properties -i

          sed '$a\RELEASE_KEY_PASSWORD=gedoor_legado'       $GITHUB_WORKSPACE/gradle.properties -i
      
      - name: remove firebase
        run: |
          echo "移除 firebase"
          sed -i '/firebase/d' $GITHUB_WORKSPACE/app/build.gradle

          echo "移除 google services"
          sed -i '/google.services/d' $GITHUB_WORKSPACE/app/build.gradle
          
      - name: fix github api repo
        run: |
          echo "fix github api repo"
          t_file="$GITHUB_WORKSPACE/app/src/main/java/io/legado/app/help/update/AppUpdateGitHub.kt"
          test -f $t_file && sed -i 's#gedoor/legado#${{ github.repository }}#g'  $t_file
          test -f $t_file && cat -n  $t_file

      - name: Set cache read only val
        run: |
          gradle_cache_read_only="true"
          if [ ${{ env.type }} == 'release' ]; then
            gradle_cache_read_only="false"
          fi
          ###### set false
          gradle_cache_read_only="false"
          echo "gradle cache read only : $gradle_cache_read_only"
          echo "gradle_cache_read_only=$gradle_cache_read_only" >> $GITHUB_ENV

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ env.gradle_cache_read_only }}

      - name: Allow Rhion Script Run
        continue-on-error: true
        run: |
          # 允许 Rhion 脚本运行
          sed -i 's/!cx.allowScriptRun/false/g'  $GITHUB_WORKSPACE/modules/rhino/src/main/java/com/script/rhino/RhinoScriptEngine.kt

      - name: Allow Rhion Script All Class Run
        continue-on-error: true
        run: |
          # 允许 Rhion 脚本 全部类名运行 运行
          sed -i 's/return false/return true/g'  $GITHUB_WORKSPACE/modules/rhino/src/main/java/com/script/rhino/RhinoClassShutter.kt
  

      - name: Build With Gradle
        continue-on-error: true
        run: |
          if [ ${{ env.type }} == 'release' ]; then
            typeName="原包名"
          else
            typeName="共存"
            sed "s/'.release'/'.${{ env.type }}'/" $GITHUB_WORKSPACE/app/build.gradle  -i
            sed 's/.release/.${{ env.type }}/'     $GITHUB_WORKSPACE/app/google-services.json -i
          fi
          fix_app_name="阅读"
          fix_ic_launcher="ic_launcher"
          if [ ${{ env.type }} == 'releaseAManaga' ]; then
            fix_app_name="阅读·漫画"
            typeName="$fix_app_name"
            fix_ic_launcher="launcher5"
          elif [ ${{ env.type }} == 'releaseACommon' ]; then
            fix_app_name="阅读·常用"
            typeName="$fix_app_name"
            fix_ic_launcher="launcher3"
          elif [ ${{ env.type }} == 'releaseAVideo' ]; then
            fix_app_name="阅读·视频"
            typeName="$fix_app_name"
            fix_ic_launcher="launcher2"
          elif [ ${{ env.type }} == 'releaseA' ]; then
            fix_app_name="阅读·测试"
            typeName="$fix_app_name"
            fix_ic_launcher="launcher1"
          else
            echo ""
          fi
          echo "替换 App Name"
          sed -i "s/\"app_name\">阅读</\"app_name\">${fix_app_name}</g" $GITHUB_WORKSPACE/app/src/main/res/values-zh/strings.xml
          sed -i "s/\"receiving_shared_label\">阅读·搜索</\"receiving_shared_label\">${fix_app_name}·搜索</g" $GITHUB_WORKSPACE/app/src/main/res/values-zh/strings.xml
          echo "替换 App logo"
          sed -i "s/ic_launcher/${fix_ic_launcher}/g" $GITHUB_WORKSPACE/app/src/main/AndroidManifest.xml


          echo "统一版本号"
          sed "/def version/c def version = \"${{ env.VERSION }}\"" $GITHUB_WORKSPACE/app/build.gradle  -i
          echo "开始${{ env.product }}$typeName构建"
          chmod +x gradlew
          ./gradlew assemble${{ env.product }}release --build-cache --parallel --daemon --warning-mode all \
          -x test -x lint -x lintVitalAnalyzeAppRelease -x lintVitalReportAppRelease -x lintVitalAppRelease \
          -x checkKotlinGradlePluginConfigurationErrors -x checkAppReleaseAarMetadata -x checkAppReleaseDuplicateClasses \
          -x validateSigningAppRelease
          echo "修改APK文件名"
          mkdir -p ${{ github.workspace }}/apk/
          for file in `ls ${{ github.workspace }}/app/build/outputs/apk/*/*/*.apk`; do
            mv "$file" ${{ github.workspace }}/apk/legado_${{ env.product }}_${{ env.VERSIONL }}_$typeName.apk
          done
          echo "移动mapping文件"
          mkdir -p ${{ github.workspace }}/mapping/
          for file in `ls ${{ github.workspace }}/app/build/outputs/mapping/*/mapping.txt`; do
            mv "$file" ${{ github.workspace }}/mapping/mapping.txt
          done

      - name: Move Missing Rules Files
        run: |
          echo "移动missing_rules.txt文件"
          mkdir -p ${{ github.workspace }}/mapping/
          for file in `ls ${{ github.workspace }}/app/build/outputs/mapping/*/missing_rules.txt`; do
            mv "$file" ${{ github.workspace }}/mapping/missing_rules.txt
          done

      - name: Upload Missing Rules File To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: legado.${{ env.product }}.${{ env.type }}.mapping.missing_rules
          if-no-files-found: ignore
          path: ${{ github.workspace }}/mapping/missing_rules.txt

      - name: Check Build production
        run: |
          cd ${{ github.workspace }}/apk/
          if [ ! -e legado_*.apk ]; then
            echo "Build production not found! Check gradle logs."
            exit 1
          fi

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: legado.${{ env.product }}.${{ env.type }}
          if-no-files-found: ignore
          path: ${{ github.workspace }}/apk/*.apk

      # - name: Upload Mapping File To Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: legado.${{ env.product }}.${{ env.type }}.mapping
      #     if-no-files-found: ignore
      #     path: ${{ github.workspace }}/mapping/mapping.txt

  lanzou:
    needs: [ prepare, build ]
    if: ${{ github.event_name != 'pull_request' && needs.prepare.outputs.lanzou == 'yes' }}
    runs-on: ubuntu-latest
    env:
      # 登录蓝奏云后在控制台运行document.cookie
      ylogin: ${{ secrets.LANZOU_ID }}
      phpdisk_info: ${{ secrets.LANZOU_PSD }}
      # 蓝奏云里的文件夹ID（阅读3测试版:2670621）
      LANZOU_FOLDER_ID: ${{ secrets.LANZOU_FOLDER_ID }}
      #蓝奏云分享链接
      LANZOU_URL: ${{ secrets.LANZOU_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: apk/
      - working-directory: apk/
        run: mv */*.apk . ;rm -rf */
      - name: Upload To Lanzou
        continue-on-error: true
        run: |
          path="$GITHUB_WORKSPACE/apk/"
          python3 $GITHUB_WORKSPACE/.github/scripts/lzy_web.py "$path" "$LANZOU_FOLDER_ID"
          echo "[$(date -u -d '+8 hour' '+%Y.%m.%d %H:%M:%S')] 分享链接: $LANZOU_URL"

  prerelease:
    needs: [ prepare, build ]
    runs-on: ubuntu-latest
    env: 
      VERSION: ${{ needs.prepare.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: apk/

      - working-directory: apk/
        run: |
          mv */*.apk .
          rm -rf */

          for file in `ls *.apk`; do
            if [[ "$file" == *原包名* ]]; then
              mv "$file" $(echo $file | sed s/原包名/release/)
            elif [[ "$file" == *阅读·常用* ]]; then
              mv "$file" $(echo $file | sed s/阅读·常用/releaseACommon/)
            elif [[ "$file" == *阅读·视频* ]]; then
              mv "$file" $(echo $file | sed s/阅读·视频/releaseAVideo/)
            elif [[ "$file" == *阅读·漫画* ]]; then
              mv "$file" $(echo $file | sed s/阅读·漫画/releaseAManaga/)
            else
              mv "$file" $(echo $file | sed s/阅读·测试/releaseA/)
            fi

          done

      - name: Delete Pre-Release
        run: |
          if gh release view beta &>/dev/null; then
            gh release delete beta -y
          fi
        env:
          GH_TOKEN: ${{ github.token }}
      
      - name: Create or update beta tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: beta
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Pre-Release
        uses: ncipollo/release-action@v1
        with:
          name: legado_app_${{ env.VERSION }}
          tag: "beta"
          body: "此版本为测试版，签名与正式版不同，可能存在不稳定情况，升级前请务必备份好数据。"
          prerelease: true
          artifacts: ${{ github.workspace }}/apk/*.apk
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 2

  test_Branch:
    needs: [ prepare, build ]
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' && github.actor == 'gedoor' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: apk/
      - working-directory: apk/
        run: mv */*.apk . ;rm -rf */
      - name: Push To "test" Branch
        run: |
          cd $GITHUB_WORKSPACE/apk/
          git init
          git checkout -b test
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote add origin "https://${{ github.actor }}:${{ secrets.ACTIONS_TOKEN }}@github.com/${{ github.actor }}/release"
          git add *.apk
          git commit -m "${{ needs.prepare.outputs.versionL }}"
          git push -f -u origin test

  telegram:
    needs: [ prepare, build ]
    if: ${{ github.event_name != 'pull_request' && needs.prepare.outputs.telegram == 'yes' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: apk/
      - working-directory: apk/
        run: |
          for file in `ls */*.apk`; do
            mv "$file" "$(echo "$file"|sed -e 's#.*\/##g' -e "s/_/ /g" -e 's/legado/阅读/')"
          done
          rm -rf */
      - name: Post to channel
        uses: xireiki/channel-post@v1
        with:
          chat_id: ${{ secrets.CHANNEL_ID }}
          bot_token: ${{ secrets.BOT_TOKEN }}
          context: "#阅读 #Legado #Beta ${{ needs.prepare.outputs.versionL }}"
          path: apk/*
          method: sendFile